server:
  port: 8010
subscriptionmanager:
  disableHttpOptionsMethod: true
  subscription:
    defaultPageSize: ${DEFAULT_PAGE_SIZE}
    maxPageSize: ${MAX_PAGE_SIZE}
  db:
    host: ${POSTGRES_HOST}
    port: ${POSTGRES_PORT:5432}
    schema: ${CONSENT_MANAGER_DB_NAME}
    user: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    poolSize: ${MASTER_POOL_SIZE:5}
    replica-read-enabled: {REPLICA_READ_ENABLED:false}
    replica:
      host: ${REPLICA_POSTGRES_HOST}
      port: ${REPLICA_POSTGRES_PORT:5432}
      user: ${REPLICA_POSTGRES_USER}
      password: ${REPLICA_POSTGRES_PASSWORD}
      poolSize: ${REPLICA_POOL_SIZE:3}
  keycloak:
    baseUrl: ${KEY_CLOAK_URL}
    clientId: ${KEY_CLOAK_CONSENT_CLIENT_ID}
    clientSecret: ${KEY_CLOAK_CONSENT_CLIENT_SECRET}
    userName: ${KEY_CLOAK_CONSENT_USER_NAME}
    password: ${KEY_CLOAK_CONSENT_PASSWORD}
    jwkUrl:  ${KEY_CLOAK_JWK_URL}
    issuer: ${KEY_CLOAK_TOKEN_ISSUER}
  gatewayservice:
    baseUrl: ${GATEWAY_BASE_URL}
    requestTimeout: ${GATEWAY_REQUEST_TIMEOUT}
    clientSecret: ${GATEWAY_CLIENT_SECRET}
    clientId: ${GATEWAY_CLIENT_ID}
    jwkUrl: ${CENTRAL_REGISTRY_JWK_URL}
  authorization:
    header: ${AUTHORIZATION_HEADER:Authorization}
    idpCertPath: ${IDP_CERT_PATH}
    requireAuthForCerts: ${REQUIRE_AUTH_FOR_CERT:false}
    idpClientId : ${IDP_CLIENT_ID}
    idpClientSecret : ${IDP_SECRET}
    idpAuthURL : ${IDP_AUTH_URL}
  cacheMethod: ${CACHE_METHOD:guava}
  userservice:
    url: ${User_Service_Url}
    transactionPinDigitSize: ${TRANSACTION_PIN_DIGIT_SIZE}
    transactionPinTokenValidity: ${TRANSACTION_PIN_TOKEN_VALIDITY}
    userCreationTokenValidity: ${USER_CREATION_TOKEN_VALIDITY}
    userIdSuffix: ${USER_ID_SUFFIX}
    maxOtpAttempts: ${MAX_OTP_ATTEMPTS}
    maxOtpAttemptsPeriodInMin: ${MAX_OTP_ATTEMPTS_PERIOD_IN_MIN}
    otpAttemptsBlockPeriodInMin: ${OTP_ATTEMPTS_BLOCK_PERIOD_IN_MIN}
    maxIncorrectPinAttempts: 5
    otpInvalidAttemptsBlockPeriodInMin: ${OTP_INVALID_ATTEMPT_BLOCK_PERIOD_IN_MIN}
    otpMaxInvalidAttempts: ${MAX_INVALID_OTP_ATTEMPTS}
    txnTimeout: ${USER_TRANSACTION_TIMEOUT}
    maxHealthIdSearchAttempts: ${HEALTHID_SEARCH_ATTEMPTS:25}
    maxHealthIdSearchAttemptsInMin: ${HEALTHID_SEARCH_ATTEMPTS_IN_MIN:5}
    healthIdSearchBlockPeriodInMin: ${HEALTHID_BLOCK_PERIOD_IN_MIN:360}
    enableShareProfile: ${ENABLE_SHARE_PROFILE:false}
  accountservice:
    usingUnsecureSSL: ${Account_Service_Uses_Unsecure_SSL:true}
    url: ${Account_Service_Url}
    enable-offline-verification: ${ENABLE_OFFLINE_VERIFICATION:true}
    hasBehindGateway: ${HAS_BEHIND_GATEWAY:false}
    clientId: ${HAS_CLIENT_ID}
    clientSecret: ${HAS_CLIENT_SECRET}
    hasAuthUrl: ${HAS_AUTH_URL}
spring:
  rabbitmq:
    host: ${RABBITMQ_HOST}
    port: ${RABBITMQ_PORT}
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}
  liquibase:
    change-log: ${LIQUIBASE_PATH:classpath:liquibase.xml}
    enabled: ${RUN_LIQUIBASE:false}
webclient:
  maxInMemorySize: ${MAX_IN_MEMORY_SIZE:50000}
  use-connection-pool: ${USE_HTTP_CONNECTION_POOL:true}
  connection-pool:
    poolSize: ${HTTP_CONNECTION_POOL_SIZE:500}
    maxLifeTime: ${HTTP_CONNECTION_MAX_LIFETIME:10}
    maxIdleTimeout: ${HTTP_CONNECTION_MAX_IDLETIME:5}

