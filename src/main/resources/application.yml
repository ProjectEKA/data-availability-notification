server:
  port: 8010
subscriptionmanager:
  disableHttpOptionsMethod: true
  subscription:
    defaultPageSize: ${DEFAULT_PAGE_SIZE}
    maxPageSize: ${MAX_PAGE_SIZE}
  db:
    host: ${POSTGRES_HOST}
    port: ${POSTGRES_PORT:5432}
    schema: ${CONSENT_MANAGER_DB_NAME}
    user: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    poolSize: ${MASTER_POOL_SIZE:5}
    replica-read-enabled: {REPLICA_READ_ENABLED:false}
    replica:
      host: ${REPLICA_POSTGRES_HOST}
      port: ${REPLICA_POSTGRES_PORT:5432}
      user: ${REPLICA_POSTGRES_USER}
      password: ${REPLICA_POSTGRES_PASSWORD}
      poolSize: ${REPLICA_POOL_SIZE:3}
  keycloak:
    baseUrl: ${KEY_CLOAK_URL}
    clientId: ${KEY_CLOAK_CONSENT_CLIENT_ID}
    clientSecret: ${KEY_CLOAK_CONSENT_CLIENT_SECRET}
    userName: ${KEY_CLOAK_CONSENT_USER_NAME}
    password: ${KEY_CLOAK_CONSENT_PASSWORD}
    jwkUrl:  ${KEY_CLOAK_JWK_URL}
    issuer: ${KEY_CLOAK_TOKEN_ISSUER}
  gatewayservice:
    baseUrl: ${GATEWAY_BASE_URL}
    requestTimeout: ${GATEWAY_REQUEST_TIMEOUT}
    clientSecret: ${GATEWAY_CLIENT_SECRET}
    clientId: ${GATEWAY_CLIENT_ID}
    jwkUrl: ${CENTRAL_REGISTRY_JWK_URL}
  authorization:
    header: ${AUTHORIZATION_HEADER:Authorization}
    idpCertPath: ${IDP_CERT_PATH}
    requireAuthForCerts: ${REQUIRE_AUTH_FOR_CERT:false}
    idpClientId : ${IDP_CLIENT_ID}
    idpClientSecret : ${IDP_SECRET}
    idpAuthURL : ${IDP_AUTH_URL}
  cacheMethod: ${CACHE_METHOD:guava}
spring:
  rabbitmq:
    host: ${RABBITMQ_HOST}
    port: ${RABBITMQ_PORT}
    username: ${RABBITMQ_USERNAME:guest}
    password: ${RABBITMQ_PASSWORD:guest}
  liquibase:
    change-log: ${LIQUIBASE_PATH:classpath:liquibase.xml}
    enabled: ${RUN_LIQUIBASE:false}
logging:
  level:
    ROOT: ${LOG_LEVEL:INFO}